@using System.Linq;
@using Popularity.Domain.Cards;
@model Popularity.Models.MoveModel

@{
    ViewData["Title"] = "Arena";
    Layout = null;
}
<head>
    <environment include="Development">
        <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
        <link rel="stylesheet" href="~/css/site.css" />
        <link href="https://fonts.googleapis.com/css?family=Barlow+Condensed|Monoton" rel="stylesheet">
        <script src="../js/jquery-3.3.1.min.js"></script>
    </environment>
    <environment exclude="Development">
        <link rel="stylesheet" href="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.7/css/bootstrap.min.css"
              asp-fallback-href="~/lib/bootstrap/dist/css/bootstrap.min.css"
              asp-fallback-test-class="sr-only" asp-fallback-test-property="position" asp-fallback-test-value="absolute" />
        <link rel="stylesheet" href="~/css/site.min.css" asp-append-version="true" />
        <link href="https://fonts.googleapis.com/css?family=Barlow+Condensed|Monoton" rel="stylesheet">
        <script src="../js/jquery-3.3.1.min.js"></script>
    </environment>
</head>
<style>
    body {
        padding: 0;
    }

    .arena {
        display: grid;
        grid-template-columns: 85% 15%;
        height: 100%;
    }

    .even-rows-container {
        display: grid;
        grid-template-rows: 50% 50%;
    }

    .hand-section {
        display: flex; 
        flex-direction: row;
        background-color: rgb(204, 204, 228)
    }

    .flex-row {
        display: flex; 
        flex-direction: row;
    }

    .centered {
        display: grid;
        align-content: center;
        align-items: center;
        text-align: center;
    }

    .champ-section {
        height: 10%; 
        background-color: rgb(255, 245, 190)
    }

    .ally-card {
        width: 150px;
        cursor: pointer;
        font-size: .8em;
        padding-left: 20px;
    }

    .enemy-card {
        font-size: .6em;
        width: 50px;
        height: 50px;
    }

    .card {
        padding: 10px;
        background-color: #af9e9e;
        margin: 10px;
        border-radius: 10px;
    }

    .selected {
        background-color: #bbaaaa;
        border-color: #a5a5de;
        border-width: 5px;
        border-style: groove;
    }

    .action-section {
        display: grid;
        grid-template-rows: 5% 85% 10%;
        height: 100%;
        background-color: white;
    }

    .actions-summary
    {
        font-size: .8em;
        padding: 12px;
    }
</style>
<div class="arena">
    <div id="card-table">
        <div id="enemy-cards" style="height: 10%;" class="hand-section">
            @foreach (var enemyCard in Model.Enemy.Hand)
            {
                <div class="card enemy-card">
                    <p>Enemy Card</p>
                </div>
            }
        </div>
        <div id="enemy-champ-section" class="centered champ-section">
            Enemy Champ Section
        </div>
        <div id="battlefield" style="height: 50%" class="even-rows-container">
            <div id="enemy-side" class="even-rows-container" style="background-color: rgb(236, 204, 204);">
                <div id="enemy-side-back" class="centered">
                    @foreach (var enemy in Model.Enemy.Played.Where(x => x.Row == Row.Back))
                    {
                        <div>
                            <span>@enemy.Name</span><br>
                            <span>Health: @enemy.Health</span><br>
                        </div>
                    }
                </div>
                <div id="enemy-side-front" class="centered">
                    @foreach (var enemy in Model.Enemy.Played.Where(x => x.Row == Row.Front))
                    {
                        <div>
                            <span>@enemy.Name</span><br>
                            <span>Health: @enemy.Health</span><br>
                        </div>
                    }
                </div>
            </div>
            <div id="ally-side" class="even-rows-container" style="background-color: rgb(203, 233, 203);">
                <div id="ally-side-front" class="centered">
                    @foreach (var ally in Model.User.Played.Where(x => x.Row == Row.Front))
                    {
                        <div>
                            <span>@ally.Name</span><br>
                            <span>Health: @ally.Health</span><br>
                        </div>
                    }
                </div>
                <div id="ally-side-back" class="centered">
                    @foreach (var ally in Model.User.Played.Where(x => x.Row == Row.Back))
                    {
                        <div>
                            <span>@ally.Name</span><br>
                            <span>Health: @ally.Health</span><br>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div id="ally-champ-section" class="centered champ-section">
            Ally Champ Section
        </div>
        <div id="ally-cards" style="height: 20%;" class="hand-section">
            @foreach (var allyCard in Model.User.Hand)
            {
                <div class="card ally-card">
                    <span>@allyCard.Name</span><br>
                    <span>Health: @allyCard.Health</span><br>
                    <span>Damage: @allyCard.Damage</span><br>
                    <span>Rarity: @allyCard.Rarity</span><br>
                </div>
            }
            <input type="text" id="card-selected" hidden>
        </div>
    </div>
    <div id="actions" class="action-section">
        <h4 class="centered">Actions</h4>
        <p class="actions-summary">@Model.MoveSummary</p>
        <div class="centered">
            <button style="margin-left: 10px; margin-right: 10px;" class="btn btn-success" id="submit-button">Submit Move</button>
        </div>
    </div>
</div>
<script>
    (function() {
        $(".ally-card").click(function() {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                var selectedCard = $(this);
                $(".ally-card").each(function() {
                    if (this != selectedCard)
                    {
                        $(this).removeClass('selected');
                    }
                });
                selectedCard.addClass('selected');
                var nameSpan = selectedCard.children('span')[0];
                var selectedCardName = $(nameSpan).text();
                $("#card-selected").val(selectedCardName);
            }
        });

        $("#submit-button").click(function(){
            var selection = $("#card-selected").val();
            if (selection !== "")
            {
                window.location = '@Url.Action("Move", "Game")' + '?selection=' + $("#card-selected").val();
            }
        });
    })();
</script>
